# 언어와 jdk의 버전 설정
language: java
jdk:
  - openjdk11

# 어느 브랜치가 push 될 때 수행할지를 정함
branches:
  only:
    - main

# 빌드 전에 gradlew의 권한 추가
before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
# gradle을 통해 의존성을 받으면 이를 캐시하여 배포할 때 마다 다시 받지 않도록 함
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

# 추가
before_deploy:
  - zip -r springboot-webservice * # 모든파일을 springboot-webservice 로 압축
  - mkdir -p deploy
  - mv springboot-webservice.zip deploy/springboot-webservice.zip # 파일위치 변경

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: yanglet-springboot-build
    region: ap-northeast-2
    skip_cleanup: true
    acl: private
    local_dir: deploy
    wait-until-deployed: true
    on:
      all_branches: true
# CodeDeploy 관련 추가
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: yanglet-springboot-build # S3 버킷
    key: springboot-webservice.zip # 빌드 파일 압축해서 전달
    bundle_type: zip # 압축 확장자
    application: springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: springboot-webservice-group # 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
# CodeDeploy 관련 추가 끝

# 추가 끝

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - 'didcnddnr@skuniv.ac.kr'